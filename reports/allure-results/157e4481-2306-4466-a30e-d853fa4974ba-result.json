{"name": "test_add_to_cart_advanced[edge]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "request = <SubRequest 'logged_in_driver' for <Function test_add_to_cart_advanced[edge]>>\n\n    @pytest.fixture(scope=\"session\", params=[\"chrome\", \"edge\", \"firefox\"])\n    def logged_in_driver(request):\n        browser_name = request.param\n        driver = DriverFactory.get_driver(browser_name=browser_name, headless=False)\n        driver.get(\"https://www.demoblaze.com\")\n        login_page = LoginPage(driver)\n        login_page.open_login_modal()\n        login_page.enter_username(\"Ramya Hunagund\")\n        login_page.enter_password(\"ramya123\")\n>       login_page.click_login()\n\ntests\\conftest.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:25: in click_login\n    WaitUtils.wait_for_element_clickable(self.driver, self.submit_button).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutilities\\wait_utils.py:12: in wait_for_element_clickable\n    return WebDriverWait(driver, timeout).until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e242b642034e83341a63c6f16441a72\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000260631A3A60>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "stdout", "source": "7872a494-5a86-4382-a3ec-722e8a2ce7b7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "logged_in_driver", "value": "'edge'"}], "start": 1761101366389, "stop": 1761101366389, "uuid": "a8d0f13b-43cd-472c-841f-539978542d41", "historyId": "4fc39e24f26d2f4a2ac57d41b8005364", "testCaseId": "40ba0cf4ea4721dd620b47dfb2e4c6b5", "fullName": "tests.test_add_to_cart#test_add_to_cart_advanced", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_to_cart"}, {"name": "host", "value": "ASCENDI-VC9THP6"}, {"name": "thread", "value": "13808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_to_cart"}], "titlePath": ["tests", "test_add_to_cart.py"]}